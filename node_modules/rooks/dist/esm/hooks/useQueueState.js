var __spreadArray = (this && this.__spreadArray) || function (to, from) {
    for (var i = 0, il = from.length, j = to.length; i < il; i++, j++)
        to[j] = from[i];
    return to;
};
import { useCallback, useState } from "react";
function useQueueState(initialList) {
    var _a = useState(__spreadArray([], initialList)), list = _a[0], setList = _a[1];
    var length = list.length;
    var enqueue = useCallback(function (item) {
        var newList = __spreadArray(__spreadArray([], list), [item]);
        setList(newList);
        return newList.length;
    }, [list]);
    var dequeue = useCallback(function () {
        if (list.length > 0) {
            var firstItem = list[0];
            setList(__spreadArray([], list.slice(1)));
            return firstItem;
        }
        return undefined;
    }, [list]);
    var peek = useCallback(function () {
        if (length > 0) {
            return list[0];
        }
        return undefined;
    }, [list]);
    var controls = {
        dequeue: dequeue,
        enqueue: enqueue,
        length: length,
        peek: peek,
    };
    return [list, controls];
}
export { useQueueState };
