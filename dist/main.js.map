{"version":3,"file":"main.js","mappings":"iCAAAA,EAAOC,QAAUC,QAAQ,S,QCAzBF,EAAOC,QAAUC,QAAQ,SCCrBC,EAA2B,GAG/B,SAASC,EAAoBC,GAE5B,IAAIC,EAAeH,EAAyBE,GAC5C,QAAqBE,IAAjBD,EACH,OAAOA,EAAaL,QAGrB,IAAID,EAASG,EAAyBE,GAAY,CAGjDJ,QAAS,IAOV,OAHAO,EAAoBH,GAAUL,EAAQA,EAAOC,QAASG,GAG/CJ,EAAOC,Q,MCrBf,MAAM,EAA+BC,QAAQ,YCK7C,SAASO,IACK,IAAIC,EAAAA,cAAc,CAC5BC,MAAO,IACPC,OAAQ,IACRC,eAAgB,CACdC,iBAAiB,EACjBC,kBAAkB,KAQhBC,QAAJ,yBAlBSd,EAAQ,IACTA,EAAQ,KA6BpBe,EAAAA,IAAAA,YAAgBC,MAAK,kBAAMT,OAG3BQ,EAAAA,IAAAA,GAAO,qBAAqB,WACD,WAArBE,QAAQC,UACVH,EAAAA,IAAAA,UAMJA,EAAAA,IAAAA,GAAO,YAAY,WAC4B,IAAzCP,EAAAA,cAAAA,gBAA8BW,QAChCZ,Q","sources":["webpack://mariposa/external node-commonjs \"path\"","webpack://mariposa/external node-commonjs \"url\"","webpack://mariposa/webpack/bootstrap","webpack://mariposa/external node-commonjs \"electron\"","webpack://mariposa/./electron/main.ts"],"sourcesContent":["module.exports = require(\"path\");","module.exports = require(\"url\");","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","const __WEBPACK_NAMESPACE_OBJECT__ = require(\"electron\");","import { app, BrowserWindow } from 'electron';\nconst path = require('path')\nconst url = require('url');\n// require('electron-reload')(__dirname);\n\nfunction createWindow() {\n  const win = new BrowserWindow({\n    width: 1000,\n    height: 800,\n    webPreferences: {\n      nodeIntegration: true,\n      contextIsolation: false,\n      // enableRemoteModule: true,\n    }\n  })\n\n  if (process.env.NODE_ENV === 'development') {\n    win.loadURL(`http://localhost:4000`);\n  } else {\n    win.loadURL(\n      `http://localhost:3000`\n      // url.format({\n      //   pathname: path.join(__dirname, './index.html'),\n      //   protocol: 'file:',\n      //   slashes: true\n      // })\n    );\n  }\n}\n\n// Will be called when Electron has finished initialization\napp.whenReady().then(() => createWindow());\n\n// Quit when all windows are closed, except for MacOS (darwin)\napp.on('window-all-closed', () => {\n  if (process.platform !== 'darwin') {\n    app.quit()\n  }\n});\n\n// On macOS it's common to re-create a window in the app when the\n// dock icon is clicked and there are no other windows open.\napp.on('activate', () => {\n  if (BrowserWindow.getAllWindows().length === 0) {\n    createWindow()\n  }\n});"],"names":["module","exports","require","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","__webpack_modules__","createWindow","BrowserWindow","width","height","webPreferences","nodeIntegration","contextIsolation","loadURL","app","then","process","platform","length"],"sourceRoot":""}